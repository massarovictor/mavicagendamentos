-- CONFIGURA√á√ÉO DEFINITIVA DE GESTORES
-- Execute no Supabase Dashboard > SQL Editor

-- ============================================
-- PASSO 1: AN√ÅLISE DA SITUA√á√ÉO ATUAL
-- ============================================

-- Ver todos os usu√°rios e seus pap√©is
SELECT 
    nome,
    email,
    tipo,
    espacos,
    CASE 
        WHEN tipo = 'admin' THEN 'üî¥ ADMIN - Pode aprovar tudo, mas N√ÉO recebe emails'
        WHEN tipo = 'gestor' THEN 'üü¢ GESTOR - Recebe emails dos espa√ßos que gerencia'
        ELSE 'üîµ USU√ÅRIO - Apenas solicita agendamentos'
    END as papel_no_sistema
FROM usuarios
ORDER BY tipo, nome;

-- Ver quais espa√ßos existem
SELECT id, nome, descricao FROM espacos ORDER BY id;

-- ============================================
-- PASSO 2: CRIAR GESTORES PARA CADA ESPA√áO
-- ============================================

-- Criar um gestor espec√≠fico para cada espa√ßo
-- AJUSTE os emails conforme necess√°rio para sua escola

-- Gestor do Audit√≥rio
INSERT INTO usuarios (id, nome, email, tipo, ativo, espacos, senha) 
VALUES (
    gen_random_uuid(), 
    'Maria Silva - Gestor Audit√≥rio', 
    'maria.silva@escola.com', 
    'gestor', 
    true, 
    ARRAY[1], -- ID do Audit√≥rio
    '123456' -- senha padr√£o
)
ON CONFLICT (email) DO UPDATE SET
    espacos = EXCLUDED.espacos,
    nome = EXCLUDED.nome,
    tipo = 'gestor';

-- Gestor da Quadra Poliesportiva
INSERT INTO usuarios (id, nome, email, tipo, ativo, espacos, senha) 
VALUES (
    gen_random_uuid(), 
    'Jo√£o Santos - Gestor Quadra', 
    'joao.santos@escola.com', 
    'gestor', 
    true, 
    ARRAY[2], -- ID da Quadra
    '123456'
)
ON CONFLICT (email) DO UPDATE SET
    espacos = EXCLUDED.espacos,
    nome = EXCLUDED.nome,
    tipo = 'gestor';

-- Gestor do Lab de Inform√°tica
INSERT INTO usuarios (id, nome, email, tipo, ativo, espacos, senha) 
VALUES (
    gen_random_uuid(), 
    'Ana Costa - Gestor Lab Info', 
    'ana.costa@escola.com', 
    'gestor', 
    true, 
    ARRAY[3], -- ID do Lab Info
    '123456'
)
ON CONFLICT (email) DO UPDATE SET
    espacos = EXCLUDED.espacos,
    nome = EXCLUDED.nome,
    tipo = 'gestor';

-- Gestor do Lab de L√≠nguas
INSERT INTO usuarios (id, nome, email, tipo, ativo, espacos, senha) 
VALUES (
    gen_random_uuid(), 
    'Pedro Oliveira - Gestor Lab L√≠nguas', 
    'pedro.oliveira@escola.com', 
    'gestor', 
    true, 
    ARRAY[4], -- ID do Lab L√≠nguas
    '123456'
)
ON CONFLICT (email) DO UPDATE SET
    espacos = EXCLUDED.espacos,
    nome = EXCLUDED.nome,
    tipo = 'gestor';

-- ============================================
-- PASSO 3: VERIFICAR RESULTADO
-- ============================================

-- Verificar se cada espa√ßo tem um gestor
SELECT 
    e.id,
    e.nome as espaco,
    string_agg(u.nome || ' (' || u.email || ')', ', ') as gestores_responsaveis,
    COUNT(CASE WHEN u.tipo = 'gestor' THEN 1 END) as total_gestores
FROM espacos e
LEFT JOIN usuarios u ON u.espacos @> ARRAY[e.id] AND u.tipo = 'gestor'
GROUP BY e.id, e.nome
ORDER BY e.id;

-- ============================================
-- PASSO 4: GARANTIR QUE ADMIN N√ÉO EST√Å COMO GESTOR
-- ============================================

-- Remover espa√ßos do admin (ele pode aprovar tudo, mas n√£o deve receber emails)
UPDATE usuarios 
SET espacos = NULL 
WHERE tipo = 'admin';

-- ============================================
-- PASSO 5: RESUMO FINAL
-- ============================================

SELECT 
    '‚úÖ CONFIGURA√á√ÉO CONCLU√çDA!' as status,
    'Cada espa√ßo agora tem um gestor espec√≠fico que receber√° emails' as mensagem
UNION ALL
SELECT 
    'üìß Gestores criados:',
    string_agg(nome || ' (' || email || ')', ', ')
FROM usuarios 
WHERE tipo = 'gestor'
UNION ALL
SELECT 
    'üî¥ Administradores:',
    string_agg(nome || ' - N√ÉO recebe emails de gestor', ', ')
FROM usuarios 
WHERE tipo = 'admin';

-- ============================================
-- INFORMA√á√ïES IMPORTANTES:
-- ============================================
-- 1. Administradores podem aprovar QUALQUER agendamento
-- 2. Gestores s√≥ podem aprovar agendamentos dos seus espa√ßos
-- 3. Apenas gestores recebem emails de novas solicita√ß√µes
-- 4. Administradores N√ÉO recebem emails (evita spam)
-- 5. Ajuste os emails dos gestores conforme necess√°rio 